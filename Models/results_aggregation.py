# -*- coding: utf-8 -*-
"""results_aggregation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uEjtp4ZpKkyiCQo6kcimHEzifleFwEbH

This will be a python script in the end.

Aggregating results from the NN and the lightGBM model to further push the performance.

Improved upon [this notebook](https://www.kaggle.com/khornlund/modular-blend)
"""

import numpy as np
import pandas as pd
import os
from scipy.stats import rankdata

# load the data from Google Drive
from google.colab import drive
drive.mount('/content/gdrive')

LABELS = ["HasDetections"]

preds_df = pd.DataFrame([
    {'fn': '/content/gdrive/My Drive/Coding experiment/MARTHA/Predictions/NNsubmission.csv', 'weight': 3},
    {'fn': '/content/gdrive/My Drive/Coding experiment/MARTHA/Predictions/lgb_nover_submission.csv', 'weight': 0.5},
    {'fn': '/content/gdrive/My Drive/Coding experiment/MARTHA/data/lgb_submission_0.csv', 'weight': 2},
    {'fn': '/content/gdrive/My Drive/Coding experiment/MARTHA/data/lgb_submission_1.csv', 'weight': 2},
    {'fn': '/content/gdrive/My Drive/Coding experiment/MARTHA/data/lgb_submission_2.csv', 'weight': 2},
    {'fn': '/content/gdrive/My Drive/Coding experiment/MARTHA/data/lgb_submission_3.csv', 'weight': 2},
    {'fn': '/content/gdrive/My Drive/Coding experiment/MARTHA/data/lgb_submission_4.csv', 'weight': 2},
    #{'fn': '/content/gdrive/My Drive/Coding experiment/MARTHA/Predictions/lgb_baseline_submission.csv', 'weight': 5},
])

preds_df.head(10)

# read the data in
preds_df['data'] = preds_df['fn'].apply(lambda f: pd.read_csv(f)[LABELS].values)
preds_df.head()

# blend the predictions using the specified function foo
def blend(preds_df, foo, save_as=None):
    result = np.zeros_like(preds_df.loc[0, 'data'])
    for idx, row in preds_df.iterrows():
        print(f'Blending: {row["fn"]}...')
        result += (row['weight'] * foo(row['data']))
    result /= preds_df['weight'].sum()
    
    if save_as != None: 
        save_submission(result, save_as)
    return result

def save_submission(predictions, save_as):
    submission = pd.read_csv('/content/gdrive/My Drive/Coding experiment/MARTHA/data/sample_submission.csv')
    submission[LABELS] = predictions
    submission.to_csv(save_as, index=False)
    print(f'Saved submission file: {save_as}')

# these functions can be passed as an argument to blend

def norm_rank(preds):
    """returns normalized rank"""
    result = rankdata(preds) / len(preds)
    return np.reshape(result, (len(result), 1))

# Add any other blending functions you want to try, eg.

def pass_pred(preds):
    """simply returns the prediction as-is"""
    return preds

def avg_pred_rank(preds):
    """returns the average of the prediction and its normalized rank"""
    nr = norm_rank(preds)
    return (preds + nr) / 2

# get blend predictions
# you can swap our norm_rank for another implemented method
blend_norm_rank = blend(preds_df, norm_rank, '/content/gdrive/My Drive/Coding experiment/MARTHA/Predictions/blend_norm_rank.csv')
print(blend_norm_rank[:5])

blend_avg_pred = blend(preds_df, pass_pred, '/content/gdrive/My Drive/Coding experiment/MARTHA/Predictions/blend_avg_pred.csv')
print(blend_avg_pred[:5])

blend_avg_pred_rank = blend(preds_df, avg_pred_rank, '/content/gdrive/My Drive/Coding experiment/MARTHA/Predictions/blend_avg_pred_rank.csv')
print(blend_avg_pred_rank[:5])

"""Below are codes for linear blending using just the lightGBM base file and the neurual network predictions."""

lgb = pd.read_csv("/content/gdrive/My Drive/Coding experiment/MARTHA/data/lgb_baseline_submission.csv")
nn = pd.read_csv("/content/gdrive/My Drive/Coding experiment/MARTHA/data/NNsubmission.csv")

lgb.head()

submission = pd.read_csv('/content/gdrive/My Drive/Coding experiment/MARTHA/data/sample_submission.csv')

possible_range = np.arange(0.1, 1, 0.1)
for i in possible_range:
  print("Trying",'{0:.1f}'.format(i),"combination.")
  submission['HasDetections'] = lgb['HasDetections'] * i + nn['HasDetections'] * (1 - i)
  submission.to_csv('/content/gdrive/My Drive/Coding experiment/MARTHA/data/ensemble_'+'{0:.1f}'.format(i)+'lgb.csv', index=False)